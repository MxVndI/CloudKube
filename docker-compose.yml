version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: cloudkube_postgres
    environment:
      POSTGRES_DB: cloudkube
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./src/main/resources/db/changelog:/docker-entrypoint-initdb.d
    networks:
      - cloudkube_network

  minio:
    image: minio/minio:latest
    container_name: cloudkube_minio
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY}
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - cloudkube_network

  minio-init:
    image: minio/mc:latest
    container_name: cloudkube_minio_init
    depends_on:
      - minio
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      MINIO_BUCKET: ${MINIO_BUCKET:-user-images}
    entrypoint: >
      /bin/sh -c "
      until (mc alias set local http://minio:9000 $${MINIO_ACCESS_KEY} $${MINIO_SECRET_KEY}); do echo 'waiting for minio...'; sleep 2; done;
      mc mb -p local/$${MINIO_BUCKET} || true;
      mc cp /seed/defaultimage.png local/$${MINIO_BUCKET}/defaultimage.png || true;
      echo 'MinIO default image ensured.'
      "
    volumes:
      - ./src/main/resources/defaultimage.png:/seed/defaultimage.png:ro
    networks:
      - cloudkube_network
    restart: on-failure

  mongo:
    image: mongo:6
    container_name: cloudkube_mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
      MONGO_INITDB_DATABASE: cloudkube
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - cloudkube_network

volumes:
  postgres_data:
  minio_data:
  mongo_data:

networks:
  cloudkube_network:
    driver: bridge 